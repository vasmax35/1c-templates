#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.МесяцНачисления = НачалоМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), -1));
	Представление = ЗарплатаКадрыКлиентСервер.ПолучитьПредставлениеМесяца(Объект.МесяцНачисления);
	ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(Этаформа, "МесяцНачисленияСтрокой", Представление);
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы  

#Область МесяцСтрокой
	
&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой",);
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Направление);
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПутьФайлаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)

    СтандартнаяОбработка = Ложь;
    
    Режим = РежимДиалогаВыбораФайла.ВыборКаталога; 
    ДиалогВыборКаталога = Новый ДиалогВыбораФайла(Режим); 
    ДиалогВыборКаталога.Каталог = Объект.ПутьКФайлу;  
    ДиалогВыборКаталога.Заголовок = "Выберите каталог"; 
        
    Оповещение = Новый ОписаниеОповещения("ВыборКаталогаЗавершение", ЭтотОбъект);
    ДиалогВыборКаталога.Показать(Оповещение)
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКаталогаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		
		ТекстСообщения = нСтр("ru='Каталог не выбран.'"); 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;    
	 
    Объект.ПутьКФайлу = Результат[0]; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьФайл(Команда)
	
	Если ПараметрыФормыЗаполненныКорректно() Тогда 
		
		ВыгрузитьФайлНаСервере();	
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПараметрыФормыЗаполненныКорректно()
	
	Ошибки = Неопределено;
	
	Если НЕ ЗначениеЗаполнено(Объект.МесяцНачисления) Тогда
			
		ТекстСообщения = нСтр("ru='Не выбран месяц начисления'");                                                                      
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
			Ошибки
			, "Объект.МесяцНачисления"
			, ТекстСообщения
			, Неопределено
			, 
			, ""
			, );
			
	КонецЕсли;    
	
	Если НЕ ЗначениеЗаполнено(Объект.ПутьКФайлу) Тогда
			
		ТекстСообщения = нСтр("ru='Не указан каталог выгрузки'");                                                                      
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
			Ошибки
			, "Объект.ПутьКФайлу"
			, ТекстСообщения
			, Неопределено
			, 
			, ""
			, );
			
	КонецЕсли;     
		
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
			
		ТекстСообщения = нСтр("ru='Не указана организация'");                                                                      
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
			Ошибки
			, "Объект.Организация"
			, ТекстСообщения
			, Неопределено
			, 
			, ""
			, );
			
		КонецЕсли;   
		
	Если Ошибки <> Неопределено Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ВыгрузитьФайлНаСервере()
	
	ПоСотруднику = ЗначениеЗаполнено(Объект.Сотрудник);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДанных(ПоСотруднику);
	Запрос.УстановитьПараметр("Месяц", Объект.МесяцНачисления);
	Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);
	Запрос.УстановитьПараметр("Организация", Объект.Организация); 
	Запрос.УстановитьПараметр("СтатьяРасходовОплатаТруда", Справочники.СтатьиРасходовЗарплата.НайтиПоКоду("ОТ")); 
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ТекстСообщения = нСтр("ru='Данные для выгрузки отсутствуют'"); 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;	
	КонецЕсли;                     
	
	НомерРасчетногоЛиста = 0;
	ДанныеОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Организация, "НаименованиеСокращенное, ИНН"); 
	ЗарплатныйПроект = Справочники.ЗарплатныеПроекты.НайтиПоНаименованию("Сбербанк");
	
	МесяцЧислом = Формат(Месяц(Объект.МесяцНачисления), "ЧЦ=2; ЧВН=");
	ГодЧислом = Формат(Год(Объект.МесяцНачисления), "ЧГ=0");                                                            
	
	Если ПоСотруднику Тогда 
		ТабельныйНомер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Сотрудник, "Код");
		ПолноеИмяФайла = СтрШаблон("%1\ЭРЛ_%2_%3_%4_%5.xml", Объект.ПутьКФайлу, ДанныеОрганизации.ИНН, МесяцЧислом, ГодЧислом, СокрЛП(ТабельныйНомер));
	Иначе
		ПолноеИмяФайла = СтрШаблон("%1\ЭРЛ_%2_%3_%4.xml", Объект.ПутьКФайлу, ДанныеОрганизации.ИНН, МесяцЧислом, ГодЧислом);
	КонецЕсли;
	
	ЗаписьXML = Новый ЗаписьXML;  
	
    ЗаписьXML.ОткрытьФайл(ПолноеИмяФайла, "windows-1251");
    ЗаписьXML.ЗаписатьОбъявлениеXML();           
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("РеестрРасчетныхЛистов");
 	ЗаписьXML.ЗаписатьАтрибут("Организация", "Наша организация");
	ЗаписьXML.ЗаписатьАтрибут("ПериодНачисленияМесяц", МесяцЧислом);
	ЗаписьXML.ЗаписатьАтрибут("ПериодНачисленияГод", ГодЧислом);
	ЗаписьXML.ЗаписатьАтрибут("ИНН", ДанныеОрганизации.ИНН);
	
	Если Ложь Тогда
		Запрос = Новый Запрос;
		РезультатЗапроса = Запрос.Выполнить();
	КонецЕсли;	
	
	ВыборкаСотрудник = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	
	Пока ВыборкаСотрудник.Следующий() Цикл // по сотрудникам
		
		Если ВыборкаСотрудник.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НомерЛицевогоСчета = ПолучитьНомерЛицевогоСчета(ВыборкаСотрудник.Сотрудник, ЗарплатныйПроект, Объект.Организация);
		Если НЕ ЗначениеЗаполнено(НомерЛицевогоСчета) Тогда
			Продолжить;	
		КонецЕсли;

		ДанныеСотрудника = КадровыйУчет.КадровыеДанныеСотрудников(
			Истина, ВыборкаСотрудник.Сотрудник, "ФИОПолные,ТабельныйНомер,Подразделение,Должность");
			
		Если ДанныеСотрудника.Количество() > 0 Тогда  
			СтрокаДанных = ДанныеСотрудника[ДанныеСотрудника.Количество()-1];		
		Иначе
			Продолжить;
		КонецЕсли;
		
		НомерРасчетногоЛиста = НомерРасчетногоЛиста + 1;
		ЗаписьXML.ЗаписатьНачалоЭлемента("РасчетныйЛист");
		ЗаписьXML.ЗаписатьАтрибут("Нпп", Формат(НомерРасчетногоЛиста, "ЧГ=0"));
			
		ЗаписьXML.ЗаписатьНачалоЭлемента("Сотрудник");	// Сотрудник начало

		ЗаписьXML.ЗаписатьНачалоЭлемента("ФИО");
		ЗаписьXML.ЗаписатьТекст(СтрокаДанных.ФИОПолные);
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("НомерЛицевогоСчета");
		ЗаписьXML.ЗаписатьТекст(НомерЛицевогоСчета);
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("ТабельныйНомер");
		ЗаписьXML.ЗаписатьТекст(СтрокаДанных.ТабельныйНомер);
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Подразделение");
		ЗаписьXML.ЗаписатьТекст(Строка(СтрокаДанных.Подразделение));
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Должность");
		ЗаписьXML.ЗаписатьТекст(Строка(СтрокаДанных.Должность));
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Сотрудник конец 
		
		ДанныеПоСуммам.Очистить();
		
		ВыборкаДетальныеЗаписи = ВыборкаСотрудник.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			СтрокаДанных = ДанныеПоСуммам.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДанных, ВыборкаДетальныеЗаписи);
		КонецЦикла;
		
		ДанныеОбщие = РеквизитФормыВЗначение("ДанныеПоСуммам");
		
		// Начислено
		Отбор = Новый Структура("ГруппаНачисленияУдержанияВыплаты", Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено);
		ДанныеНачислено = ДанныеОбщие.Скопировать(Отбор);
		ЗаписатьБлокДанныхВФайл(ЗаписьXML, ДанныеНачислено, "Начисления", "Начисление");

		// Удержано
		Отбор = Новый Структура("ГруппаНачисленияУдержанияВыплаты", Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано);
		ДанныеУдержано = ДанныеОбщие.Скопировать(Отбор);
		ЗаписатьБлокДанныхВФайл(ЗаписьXML, ДанныеУдержано, "Удержания", "Удержание");
		
		// Выплачено
		Отбор = Новый Структура("ГруппаНачисленияУдержанияВыплаты", Перечисления.ГруппыНачисленияУдержанияВыплаты.Выплачено);
		ДанныеВыплачено = ДанныеОбщие.Скопировать(Отбор);
		ЗаписатьБлокДанныхВФайл(ЗаписьXML, ДанныеВыплачено, "Выплаты", "Выплачено");
		
		// Справочные данные  
		КоличествоОтработанныхДней = ПолучитьКоличествоОтработанныхДней(Объект.МесяцНачисления, ВыборкаСотрудник.Сотрудник);
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Справочно");	
		ЗаписьXML.ЗаписатьНачалоЭлемента("Информация");
		ЗаписьXML.ЗаписатьАтрибут("Вид", "Отработано дней");
		ЗаписьXML.ЗаписатьАтрибут("Количество", Формат(КоличествоОтработанныхДней, "ЧДЦ=0; ЧН=0; ЧГ=0")); 
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Информация 
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Справочно

   		ЗаписьXML.ЗаписатьКонецЭлемента(); // РасчетныйЛист
		
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); // РеестрРасчетныхЛистов
	ЗаписьXML.Закрыть();
	
	ТекстСообщения = СтрШаблон(нСтр("ru='Файл успешно сохранен: %1'"), ПолноеИмяФайла); 
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьБлокДанныхВФайл(ЗаписьXML, ТаблицаДанных, ИмяБлокаДанных, ИмяЭлементаДанных)
	
	Если Ложь Тогда
		ТаблицаДанных = Новый ТаблицаЗначений;
	КонецЕсли;
	
	Всего = ТаблицаДанных.Итог("Сумма");
	ФорматнаяСтрокаСуммы = "ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0";
	
	Если Всего = 0 Тогда
		Возврат;
	КонецЕсли;

	ЗаписьXML.ЗаписатьНачалоЭлемента(ИмяБлокаДанных);	// ИмяБлокаДанных начало	
	ЗаписьXML.ЗаписатьАтрибут("Всего", Формат(Всего, ФорматнаяСтрокаСуммы));
	
	Для каждого СтрокаТаблицы Из ТаблицаДанных Цикл 
		
		ЗаписьXML.ЗаписатьНачалоЭлемента(ИмяЭлементаДанных);
		ЗаписьXML.ЗаписатьАтрибут("Вид", СтрокаТаблицы.НачислениеУдержание);
		//ЗаписьXML.ЗаписатьАтрибут("Описание", "Пока не ясно откуда брать описание");
		ЗаписьXML.ЗаписатьАтрибут("Сумма", Формат(СтрокаТаблицы.Сумма, ФорматнаяСтрокаСуммы)); 
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
	КонецЦикла;
 
	ЗаписьXML.ЗаписатьКонецЭлемента(); // ИмяБлокаДанных конец

КонецПроцедуры  

&НаСервереБезКонтекста
Функция ПолучитьКоличествоОтработанныхДней(МесяцНачисления, Сотрудник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОВремениДляРасчетаСреднегоОбщийОбороты.ОтработаноДнейОборот КАК ОтработаноДнейОборот
	               |ИЗ
	               |	РегистрНакопления.ДанныеОВремениДляРасчетаСреднегоОбщий.Обороты(&Месяц, КОНЕЦПЕРИОДА(&Месяц, МЕСЯЦ), , Сотрудник = &Сотрудник) КАК ДанныеОВремениДляРасчетаСреднегоОбщийОбороты";
	Запрос.УстановитьПараметр("Месяц", МесяцНачисления);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();  
		
		Возврат Выборка.ОтработаноДнейОборот; 
		
	КонецЕсли;
	
	Возврат 0;                
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьНомерЛицевогоСчета(Сотрудник, ЗарплатныйПроект, Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо
	               |ПОМЕСТИТЬ ВТ_Физлицо
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |ГДЕ
	               |	Сотрудники.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета КАК НомерЛицевогоСчета
	               |ИЗ
	               |	РегистрСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам КАК ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам
	               |ГДЕ
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо В
	               |			(ВЫБРАТЬ
	               |				ВТ_Физлицо.ФизическоеЛицо КАК ФизическоеЛицо
	               |			ИЗ
	               |				ВТ_Физлицо КАК ВТ_Физлицо)
	               |	И ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект = &ЗарплатныйПроект
	               |	И ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Организация = &Организация";
	Запрос.УстановитьПараметр("Ссылка", Сотрудник);
	Запрос.УстановитьПараметр("ЗарплатныйПроект", ЗарплатныйПроект);
	Запрос.УстановитьПараметр("Организация", Организация);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();  
		
		Возврат Выборка.НомерЛицевогоСчета; 
		
	КонецЕсли;
	
	Возврат Неопределено;        	
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаДанных(ПоСотруднику = Ложь)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	НачисленияУдержанияПоСотрудникам.Период КАК Период,
		|	НачисленияУдержанияПоСотрудникам.Сотрудник КАК Сотрудник,
		|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание КАК НачислениеУдержание,
		|	НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты КАК ГруппаНачисленияУдержанияВыплаты,
		|	СУММА(НачисленияУдержанияПоСотрудникам.Сумма) КАК Сумма
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|ГДЕ
		|	НачисленияУдержанияПоСотрудникам.Период = &Месяц
		|	И &УсловиеСотрудникНачислениеУдержание
		|	И НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
		|	И НачисленияУдержанияПоСотрудникам.Организация = &Организация
		|	И НачисленияУдержанияПоСотрудникам.СтатьяРасходов = &СтатьяРасходовОплатаТруда
		|
		|СГРУППИРОВАТЬ ПО
		|	НачисленияУдержанияПоСотрудникам.Период,
		|	НачисленияУдержанияПоСотрудникам.Сотрудник,
		|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание,
		|	НачисленияУдержанияПоСотрудникам.ДанныеМежрасчетногоПериода,
		|	НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачисленияУдержанияПоСотрудникам.Период,
		|	НачисленияУдержанияПоСотрудникам.Сотрудник,
		|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание,
		|	НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты,
		|	СУММА(НачисленияУдержанияПоСотрудникам.Сумма)
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|ГДЕ
		|	НачисленияУдержанияПоСотрудникам.Период = &Месяц
		|	И &УсловиеСотрудникНачислениеУдержание
		|	И НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Удержано)
		|	И НачисленияУдержанияПоСотрудникам.Организация = &Организация
		|	И НачисленияУдержанияПоСотрудникам.СтатьяРасходов = &СтатьяРасходовОплатаТруда
		|
		|СГРУППИРОВАТЬ ПО
		|	НачисленияУдержанияПоСотрудникам.Период,
		|	НачисленияУдержанияПоСотрудникам.Сотрудник,
		|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание,
		|	НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БухгалтерскиеВзаиморасчетыССотрудниками.ПериодВзаиморасчетов,
		|	БухгалтерскиеВзаиморасчетыССотрудниками.Сотрудник,
		|	БухгалтерскиеВзаиморасчетыССотрудниками.ВидВзаиморасчетов,
		|	БухгалтерскиеВзаиморасчетыССотрудниками.ГруппаНачисленияУдержанияВыплаты,
		|	СУММА(БухгалтерскиеВзаиморасчетыССотрудниками.СуммаВзаиморасчетов)
		|ИЗ
		|	РегистрНакопления.БухгалтерскиеВзаиморасчетыССотрудниками КАК БухгалтерскиеВзаиморасчетыССотрудниками
		|ГДЕ
		|	БухгалтерскиеВзаиморасчетыССотрудниками.ПериодВзаиморасчетов = &Месяц
		|	И &УсловиеСотрудникВыплаты
		|	И БухгалтерскиеВзаиморасчетыССотрудниками.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Выплачено)
		|	И БухгалтерскиеВзаиморасчетыССотрудниками.Организация = &Организация
		|	И БухгалтерскиеВзаиморасчетыССотрудниками.СтатьяРасходов = &СтатьяРасходовОплатаТруда
		|
		|СГРУППИРОВАТЬ ПО
		|	БухгалтерскиеВзаиморасчетыССотрудниками.Сотрудник,
		|	БухгалтерскиеВзаиморасчетыССотрудниками.ВидВзаиморасчетов,
		|	БухгалтерскиеВзаиморасчетыССотрудниками.ПериодВзаиморасчетов,
		|	БухгалтерскиеВзаиморасчетыССотрудниками.ГруппаНачисленияУдержанияВыплаты
		|ИТОГИ ПО
		|	Сотрудник";
	
	Если ПоСотруднику Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеСотрудникНачислениеУдержание", "НачисленияУдержанияПоСотрудникам.Сотрудник = &Сотрудник");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеСотрудникВыплаты", "БухгалтерскиеВзаиморасчетыССотрудниками.Сотрудник = &Сотрудник");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеСотрудникНачислениеУдержание", "ИСТИНА");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеСотрудникВыплаты", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ТестовыеПроцедурыИФункции

&НаСервере
Процедура ТестНаСервере()

	ДанныеСотрудника = КадровыйУчет.КадровыеДанныеСотрудников(
		Истина, Объект.Сотрудник, "ФИОПолные,ТабельныйНомер,Подразделение,Должность,НомерЛицевогоСчета");
		
	СтрокаТЗ = ДанныеСотрудника[ДанныеСотрудника.Количество()-1];	

КонецПроцедуры

&НаКлиенте
Процедура Тест(Команда)
	ТестНаСервере();
КонецПроцедуры

#КонецОбласти

#КонецОбласти










